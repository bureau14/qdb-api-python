class DirectBlob:
    def get(self) -> bytes: ...
    def put(self, data: str) -> None: ...
    def remove(self) -> None: ...
    def update(self, data: str) -> None: ...

class DirectInteger:
    def get(self) -> int: ...
    def put(self, integer: int) -> None: ...
    def remove(self) -> None: ...
    def update(self, integer: int) -> None: ...

class Node:
    def __init__(
        self,
        uri: str,
        user_name: str = "",
        user_private_key: str = "",
        cluster_public_key: str = "",
        user_security_file: str = "",
        cluster_public_key_file: str = "",
        enable_encryption: bool = False,
    ) -> None: ...
    def blob(self, alias: str) -> DirectBlob: ...
    def integer(self, alias: str) -> DirectInteger: ...
    def prefix_get(self, prefix: str, max_count: int) -> list[str]: ...
